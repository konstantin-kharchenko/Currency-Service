version: "3.8"
services:
  postgres:
    image: 'postgres:13'
    container_name: 'Currency'
    hostname: postgresql
    ports:
      - "5432:5432"
    networks:
      - network-example
    environment:
      - 'POSTGRES_USER=root'
      - 'POSTGRES_PASSWORD=root'
      - 'POSTGRES_HOST_AUTH_METHOD=trust'
      - 'POSTGRES_DB=CurrencyDB'

  zookeeper:
    image: wurstmeister/zookeeper
    networks:
      - network-example
    container_name: 'ZooKeeper'
    ports:
      - "2181:2181"
  kafka:
    image: wurstmeister/kafka
    container_name: "Kafka"
    networks:
      - network-example
    ports:
      - "9092:9092"
    environment:
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka:19092,LISTENER_DOCKER_EXTERNAL://localhost:9092
      KAFKA_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka:19092,LISTENER_DOCKER_EXTERNAL://localhost:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_EXTERNAL
      KAFKA_CREATE_TOPICS: "History"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    depends_on:
      - zookeeper

  kafdrop:
    image: obsidiandynamics/kafdrop
    container_name: kafdrop
    restart: "no"
    networks:
      - network-example
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: "kafka:19092"
    depends_on:
      - kafka

  eureka-service:
    container_name: 'Eureka-Service'
    build: Eureka-Service/
    networks:
      - network-example
    ports:
      - "8761:8761"
    environment:
      eureka.instance.hostname: eureka-service
      eureka.client.serviceUrl.defaultZone: http://eureka-service:8761/eureka

  config-service:
    container_name: 'Config-Service'
    build: Config-Service/
    hostname: spring-cloud-config-server
    networks:
      - network-example
    ports:
      - "8888:8888"
    environment:
      eureka.client.serviceUrl.defaultZone: http://eureka-service:8761/eureka
    depends_on:
      - eureka-service

  auth-service:
    container_name: 'Auth-Service'
    build: Auth-Service/
    networks:
      - network-example
    ports:
      - "9001:9001"
    environment:
      eureka.client.serviceUrl.defaultZone: http://eureka-service:8761/eureka
      github.register.uri: http://registration-service:8083/registration/github
      facebook.register.uri: http://registration-service:8083/registration/facebook
      spring.config.import: optional:configserver:http://spring-cloud-config-server:8888
    depends_on:
      - eureka-service
      - postgres
      - config-service
    links:
      - postgres
    restart: on-failure

  registration-service:
    container_name: 'Registration-Service'
    build: Registration-Service/
    networks:
      - network-example
    ports:
      - "8090:8090"
    environment:
      eureka.client.serviceUrl.defaultZone: http://eureka-service:8761/eureka
      spring.config.import: optional:configserver:http://spring-cloud-config-server:8888
    depends_on:
      - eureka-service
      - postgres
      - config-service
      - auth-service
    links:
      - postgres
    restart: on-failure

  processing-service:
    container_name: 'Processing-Service'
    build: Processing-Service/
    networks:
      - network-example
    ports:
      - "8091:8091"
    environment:
      eureka.client.serviceUrl.defaultZone: http://eureka-service:8761/eureka
      auth-service.check.uri: http://auth-service:9001/auth/check
      currency-service.uri: http://api-gateway-service:8080/currency/rate/
      spring.config.import: optional:configserver:http://spring-cloud-config-server:8888
    depends_on:
      - eureka-service
      - postgres
      - config-service
      - auth-service
    restart: on-failure

  currency-service1:
    container_name: 'CurrencyConverter1'
    build: CurrencyConverter/
    networks:
      - network-example
    ports:
      - "8085:8085"
    environment:
      eureka.client.serviceUrl.defaultZone: http://eureka-service:8761/eureka
      spring.config.import: optional:configserver:http://spring-cloud-config-server:8888
      server.port: 8085
    depends_on:
      - eureka-service
      - config-service
    restart: on-failure

  currency-service2:
    container_name: 'CurrencyConverter2'
    build: CurrencyConverter/
    networks:
      - network-example
    ports:
      - "8086:8086"
    environment:
      eureka.client.serviceUrl.defaultZone: http://eureka-service:8761/eureka
      spring.config.import: optional:configserver:http://spring-cloud-config-server:8888
      server.port: 8086
    depends_on:
      - eureka-service
      - config-service
    restart: on-failure

  history-service:
    container_name: 'History-Service'
    build: History-Service/
    networks:
      - network-example
    ports:
      - "8092:8092"
    environment:
      eureka.client.serviceUrl.defaultZone: http://eureka-service:8761/eureka
      auth-service.check.uri: http://auth-service:9001/auth/check
      spring.config.import: optional:configserver:http://spring-cloud-config-server:8888
    depends_on:
      - eureka-service
      - postgres
      - config-service
      - auth-service
    restart: on-failure

  gateway-service:
    container_name: 'Gateway-Service'
    hostname: api-gateway-service
    build: Gateway-Service/
    networks:
      - network-example
    ports:
      - "8080:8080"
    depends_on:
      - currency-service1
      - currency-service2
      - registration-service
      - processing-service
      - auth-service
      - history-service
      - config-service
    environment:
      eureka.client.serviceUrl.defaultZone: http://eureka-service:8761/eureka
    restart: always

networks:
  network-example:
    driver: bridge